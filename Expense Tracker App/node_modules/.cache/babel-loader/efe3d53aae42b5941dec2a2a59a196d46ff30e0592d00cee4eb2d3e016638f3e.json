{"ast":null,"code":"var _jsxFileName = \"F:\\\\React_udemy\\\\React_project\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\Expense\\\\ExpenseChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpenseChart(props) {\n  const chartdata = [{\n    lable: 'Jan',\n    value: 0\n  }, {\n    lable: 'Feb',\n    value: 0\n  }, {\n    lable: 'Mar',\n    value: 0\n  }, {\n    lable: 'Apr',\n    value: 0\n  }, {\n    lable: 'May',\n    value: 0\n  }, {\n    lable: 'Jun',\n    value: 0\n  }, {\n    lable: 'July',\n    value: 0\n  }, {\n    lable: 'Aug',\n    value: 0\n  }, {\n    lable: 'Sep',\n    value: 0\n  }, {\n    lable: 'Oct',\n    value: 0\n  }, {\n    lable: 'Nov',\n    value: 0\n  }, {\n    lable: 'Dec',\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const mon = expense.date.getMonth();\n    con;\n    // chartdata[mon].value +=expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    data: chartdata\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 8\n  }, this);\n}\n_c = ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpenseChart","props","chartdata","lable","value","expense","expenses","mon","date","getMonth","con","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/React_udemy/React_project/01-starting-setup/01-starting-setup/src/components/Expense/ExpenseChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\r\nexport default function ExpenseChart(props){\r\n    const chartdata=[\r\n        {lable:'Jan' ,value:0},\r\n        {lable:'Feb' ,value:0},\r\n        {lable:'Mar' ,value:0},\r\n        {lable:'Apr' ,value:0},\r\n        {lable:'May' ,value:0},\r\n        {lable:'Jun' ,value:0},\r\n        {lable:'July' ,value:0},\r\n        {lable:'Aug' ,value:0},\r\n        {lable:'Sep' ,value:0},\r\n        {lable:'Oct' ,value:0},\r\n        {lable:'Nov' ,value:0},\r\n        {lable:'Dec' ,value:0},\r\n    ];\r\n    for(const expense of props.expenses)\r\n    {\r\n        const mon= expense.date.getMonth();\r\n        con\r\n       // chartdata[mon].value +=expense.amount;\r\n    }\r\n    \r\n    return(\r\n       <Chart data={chartdata}  />\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnC,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAC;EACvC,MAAMC,SAAS,GAAC,CACZ;IAACC,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,MAAM;IAAEC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,CACzB;EACD,KAAI,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EACnC;IACI,MAAMC,GAAG,GAAEF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE;IAClCC,GAAG;IACJ;EACH;;EAEA,oBACGX,OAAA,CAACF,KAAK;IAACc,IAAI,EAAET;EAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI;AAElC;AAACC,EAAA,GAzBuBhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}